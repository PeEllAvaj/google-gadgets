<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="Mine Sweeper" height="250"> <Require feature="dynamic-height"/> <Require feature="wave" /> </ModulePrefs>
<Content type="html">
<![CDATA[

Mine Finder
<div id="mine-content"></div>


<script type="text/javascript">
var height = 10;
var width = 10;
function stateUpdated() {
	drawButtons();
}


function init() {
	if (wave && wave.isInWaveContainer()) {
	wave.setStateCallback(stateUpdated);
	}
	
}
gadgets.util.registerOnLoadHandler(init);


/**
SUPER IMPORTANT:
COORDINATES ARE X (width ) by Y (height)
*/
function drawButtons() {
	var html;
	html = '<button onclick="newGame()">Start a Game</button>';
	if(wave.getState().get("revealed1x1") == "false" || wave.getState().get("revealed1x1") == "true") {
		html += "<table cellpadding=0 cellspacing=0>";

		for (var i=1; i<= height; i++) {

			html += "<tr>";

			for (var j=1; j <= width; j++) {
				var revealed = wave.getState().get("revealed"+j+"x"+i,'false');
				if(revealed == "true") {
					// Count number of mines
					var mine = wave.getState().get("map"+j+"x"+i,"false");
					if(mine == "true") {
						show = "@";
					} else {
						// Calculate number
						show = findNear(j+"x"+i);
					}
				} else {
					//alert("revealed at location " + "revealed" + j +"x"i +"  was " + revealed);
					//return;
					show = "?";
				}
				html += "<td><button  id=\"" + j + "x" + i + "\" onclick=\"press('"+j+"x"+i+"');\">" + show + "</button></td>";
				//style=\"height:25px;width:25px;\";

			}

			html += "</tr>";
			

		}
		html += "</table>"
		html += wave.getState().get('count');
	} else {
		//alert(wave.getState().get("revealed1x1") + "so we didn't show the game.");
	}
	document.getElementById("mine-content").innerHTML = html;

}
/** SUPER INNEFICIENT NAIVE IMPLEMENTATION */
function findNear(location) {
	//alert("Finding near " + location);
	coords = location.split("x");
	var x = parseInt(coords[0]);
	var y = parseInt(coords[1]);
	var bombs = 0;
	var debug= "";
	for(var i = -1;i<2;i++) {
		for(var j = -1;j<2;j++) {
			//alert("in a loop with i and j" + i + "x" + j);
			if((x+j) > 0 && (x+j) <= width && (y+i) > 0 && (y+i) <= height && !(i == 0 && j == 0)) {
				var loc = "map"+(x+j)+"x"+(y+i);
				var query = wave.getState().get(loc);
				if(query == "true") {
					bombs++;
					debug += "x"+loc+",";

				} else {
					debug += "0"+loc+",";
				}
			} else {

			}
		}
	}
	return bombs;
	
}
function press(location) {
	//alert("Pressing at location " + location);
	var delta = {};
	delta["revealed"+location] = "true";
	//alert("SEnding:" +delta + " with " + delta["revealed" + location] + " and " + location);
	wave.getState().submitDelta(delta);
	drawButtons();
	var cnt = parseInt(wave.getState().get('count','0'));
	cnt++;
	wave.getState().submitDelta({'count':cnt});
	
}

function newGame() {
	delta = {}
	for (i =1;i <= height;i++) {
		
		for (j = 1;j <= width;j++) {
			delta["map"+i+"x"+j] = (Math.floor(Math.random()*8) <= 1) ? "true" : "false";
			delta["revealed"+i+"x"+j] = "false";
		}
		
	}
	wave.getState().submitDelta(delta);
}


</script>

]]>

</Content>

</Module> 
